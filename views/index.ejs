<!DOCTYPE html>
<html lang="en">

<head>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/4.0.1/socket.io.js" integrity="sha512-q/dWJ3kcmjBLU4Qc47E4A9kTB4m3wuTY7vkFJDTZKjTs8jhyGQnaUrxa0Ytd0ssMZhbNua9hE+E7Qv1j+DyZwA==" crossorigin="anonymous"></script>
  <meta charset="UTF-8">
  <title>Danh sách người dùng</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.2/css/all.min.css    ">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <style>
    * {
      box-sizing: border-box;
    }

    .user {
      display: flex;
      align-items: center;
      padding: 12px 24px;
      cursor: pointer;
    }

    .user:nth-child(odd) {
      background-color: #F4F5F7;
    }

    .user:hover {
      background-color: #E6EFFF;
      transition: 0.3s;
    }

    .avatar {
      font-weight: bold;
      font-size: 1.5rem;
      background-color: deepskyblue;
      width: 50px;
      height: 50px;
      margin-right: 16px;
      border-radius: 50%;
      display: flex;
      justify-content: center;
      align-items: center;
      color: white
    }

    .user-info {
      height: 50px;
      flex-grow: 1;
    }

    .user-name {
      font-size: 1.1rem;
    }

    .user-info .online {
      font-size: 0.9rem;
      color: rgb(99, 99, 99)
    }

    .user .status {
      width: 90px;
      text-align: center;
    }

    .user:hover {
      background-color: #E6EFFF;
    }

    .user:hover .avatar {
      background-color: rgb(7, 142, 204);
      transition: 0.3s;
    }

    .user:hover .user-name {
      font-weight: 450;
      transition: 0.3s;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-md-7">
        <div class="rounded border mt-5 mb-3">
          <h4 class="text-primary text-center my-5">Danh sách người dùng trực tuyến</h4>
          <p style="padding: 0 24px">Số người online: <strong id="online-count" class="badge badge-danger badge-pill"></strong></p>
          <div id="user-list" class="people">
            
          </div>
        </div>
        <p class="small">Danh sách được cập nhật tự động mỗi khi có người dùng đăng nhập hoặc đăng xuất/thoát.
        </p>
        
      </div>
    </div>

    <div id="online-notification" class="alert alert-success d-inline position-fixed small" style="bottom: 20px; left: 20px">
      <strong>Trần Quang Trí</strong> vừa mới online
    </div>
    <div id="offline-notification" class="alert alert-danger d-inline position-fixed small" style="bottom: 20px; right: 20px">
      <strong>Trần Quang Trí</strong> đã thoát khỏi ứng dụng
    </div>
    <script>

        let socket; // my socket
        let onlineUsers = [];
        let username ;

        window.onload = () =>{
          console.log('Connected Server')
          
          socket = io();
          socket.on('connect', handleConectionSuccess)
          socket.on('disconnect', () => console.log('disconnected'))
          socket.on('list-users', handleUserList)
          socket.on('new-user', handleNewUser)
          socket.on('user-leave', handleUserLeave)
          socket.on('register-name', handleRegister)
          // hide notify
          $('#online-notification').fadeTo(10,0)
          $('#offline-notification').fadeTo(10,0)
        }
        // socket.on('error', () => console.log('Da gap loi: ' + e.message))
        function handleRegister(data){
            let {id, username} = data
            let user = onlineUsers.find(u => u.id == id)
            if(!user){
              return console.log('Không tìm thấy user')
            }

            user.username = username
            console.log(`Client ${id} đã đăng ký tên: ${username}`)
            displayUser(user)
            notifyOnline(username)

            // window.title = username
        }
        
        function handleConectionSuccess(){
          console.log('Đã kết nối thành công với id ' + socket.id)
          // if(!username){
          //   username = prompt('Nhập tên của bạn')
          // }
          // socket.emit('register-name', username); //gui ten user qua cho server
          console.log('Kết nối với id: ' + socket.id)
          setTimeout(() =>{
            username = sessionStorage.getItem('username')
            if(username){
              console.log('Username đọc từ sesion storage')
            }
            if(!username){
              username = prompt('Nhập tên của bạn')
              sessionStorage.setItem('username', username)
              console.log('Ten nguoi dung luu trong SS: ')
            }
            socket.emit('register-name', username); //gui ten user qua cho server
            document.title = 'User: ' + username
          }, 500 )
        }
        
        function handleUserList(users){
          console.log('Da nhan dc danh sach cac user')
          users.forEach(u => {
            console.log(u)
            if(u.id !== socket.id){
              onlineUsers.push(u);
              displayUser(u);
            }
          });
        }

        function handleNewUser(user){
          onlineUsers.push(user)
          console.log(`Một user mới đã kết nối, ngoài bạn ra tổng số users hiện tại là ${onlineUsers.length}`)
          console.log(user)
        }

        function handleUserLeave(id){
          let user = onlineUsers.find(u => u.id === id)
          onlineUsers = onlineUsers.filter(u => u.id != id)
          console.log(`User ${id} đã thoát, ngoài bạn ra chỉ còn ${onlineUsers.length} users`);
          removeUser(id);
          notifyOffline(user.username)
        }
        
        
        
        function displayUser(user){
          let status = user.free ? '<div class="badge badge-success badge-pill">Online</div>' : '<div class="badge badge-warning badge-pill">Offline</div>';
          
          let userDiv = $(`<div id="${user.id}" class="user">
            <div class="avatar">${user.username[0]}</div>
            <div class="user-info">
              <div class="user-name">${user.username}</div>
              <div class="online">Truy cập lúc: ${user.loginAt}'</div>
            </div>
            <div class="status">
              ${status}
            </div>
          </div>
          `)
          $('#user-list').append(userDiv)
          $('#online-count').html($('#user-list .user').length)
          
        }

        function removeUser(id){
          $(`#${id}`).remove();
          $('#online-count').html($('#user-list .user').length)

        }

        function notifyOnline(username){
          $('#online-notification strong').html(username)
          $('#online-notification').fadeTo(1500, 1) // show
          setTimeout(()=>{
            $('#online-notification').fadeTo(1500, 0) // hide
          }, 3000);
        }

        function notifyOffline(username){
          $('#offline-notification strong').html(username)
          $('#offline-notification').fadeTo(1500, 1) // show
          setTimeout(()=>{
            $('#offline-notification').fadeTo(1500, 0) // hide
          }, 3000);
        }
    </script>

<!-- displayUsers({id:'1', username:'Test 1', loginAt:'17h20p', free:'true'}) -->
</body>

</html>